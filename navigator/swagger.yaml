openapi: "3.0.0"

info:
  title: Navigator Sharing Data
  description: Data collected by navigator
  version: 0.1.1


servers:
  - url: /api/v1

tags:
- name: Tasks
  description: navigation task generated by app
- name: Positions
  description: real-time device position
- name: Tracks
  description: routing data calculated by app

paths:
  #Start task
  
  /task/{taskId}:
    get:
      tags:
      - Tasks
      summary: Finds task by id
      operationId: findTask
      x-openapi-router-controller: api.tasks
      parameters:
      - name: taskId
        in: path
        description: ID of task that needs to be found. ID was generated By Server. 
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.
    post:
      deprecated: true
      tags:
        - Tasks
      summary: Create a new Task
      description: ""
      operationId: addTask
      x-openapi-router-controller: api.tasks
      parameters:
      - name: taskId
        in: path
        description: ID of task
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
              
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.
      
          
  #Start position 
  /position/findLatest/{taskId}:
    get:
      tags:
      - Positions
      summary: Finds latest point data by task
      operationId: findLatestPosition
      x-openapi-router-controller: api.positions
      parameters:
      - name: taskId
        in: path
        description: ID of task that needs to be found
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.

  /position/{taskId}:
    post:
      tags:
        - Positions
      summary: Add a new point record to the database
      operationId: addPosition
      x-openapi-router-controller: api.positions
      parameters:
      - name: taskId
        in: path
        description: ID of point that needs to be added
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Point'
      
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.
  
          
  #Start track 
  /track/findLatest/{taskId}:
    get:
      tags:
      - Tracks
      summary: Finds latest track data by task
      operationId: findLatestTrack
      x-openapi-router-controller: api.tracks
      parameters:
      - name: taskId
        in: path
        description: ID of task that needs to be found
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.
        
  /track/{taskId}:
    post:
      tags:
        - Tracks
      summary: Add a new track record to the database
      operationId: addTrack
      x-openapi-router-controller: api.tracks
      parameters:
      - name: taskId
        in: path
        description: ID of point that needs to be added
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Track'
      
      responses:
        '200':
          description: Success
        '400':
          description: Invalid ID supplied
        '404':
          description: A task with the specified ID was not found.


#Start Component
components:
  schemas:
    Task:
      properties:
        id:
          type: string
        departure:
          type: string
        destination:
          type: array
          items:
            type: string
          minItems: 1
      # All properties are required
      required:  
        - id
        - departure
        - destination
    Point:
      properties:
        taskId:
          type: string
          description: foreign key
        createdTime:
          type: string
          description: EpocTime. ex. 1593525939 would be 2020-06-30T14:04:16+00:00
          example: 1593525939
        position:
          type: string
          description: Latitude and Longtitude
        # Speed:
        #   type: "integer"
        #   format: "int64"
        #   example: "60"
        # DirectionAngle:
        #   type: "integer"
        #   description: "0-360 degree"
        #   example: 30
        # Status:
        #   type: "string"
      required:
        - taskId
        - createdTime
        - position
    Track:
        properties:
          taskId:
            type: string
            description: foreign key
          createdTime:
            type: string
            description: EpocTime. ex. 1593525939 would be 2020-06-30T14:04:16+00:00
            example: 1593525939
          content:
            type: string
            description: encoded route data
        required:
          - taskId
          - createdTime
          - content
